{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"../index.js","sourcesContent":["import { ITaskInfo, ITaskContext, IAssertDist, Pipe, task, PipeTask, Operation, IAsserts } from 'development-core';\r\nimport { Gulp } from 'gulp';\r\nimport * as _ from 'lodash';\r\n// import * as chalk from 'chalk';\r\nimport * as path from 'path';\r\nconst cache = require('gulp-cached');\r\nconst sourcemaps = require('gulp-sourcemaps');\r\nconst uglify = require('gulp-uglify');\r\nconst babel = require('gulp-babel');\r\nconst plumber = require('gulp-plumber');\r\nconst htmlMin = require('gulp-minify-html');\r\nconst ngHtml2Js = require('gulp-ng-html2js');\r\nconst ngAnnotate = require('gulp-ng-annotate');\r\n\r\n/**\r\n * templ assert task option.\r\n * \r\n * @export\r\n * @interface ITemplTaskOption\r\n * @extends {IAsserts}\r\n */\r\nexport interface ITemplTaskOption extends IAsserts {\r\n    /**\r\n     * custom html template.\r\n     * \r\n     * @type {sring}\r\n     * @memberOf ITemplTaskOption\r\n     */\r\n    template?: string;\r\n\r\n    /**\r\n     * default template for angular version. 1 or 2. default angular1 template\r\n     * \r\n     * @type {sring}\r\n     * @memberOf ITemplTaskOption\r\n     */\r\n    ngVersion?: number;\r\n\r\n    /**\r\n     * uglify ng template js.\r\n     * \r\n     * @type { boolean }\r\n     * @memberof ITemplTaskOption\r\n     */\r\n    uglify?: boolean;\r\n\r\n    /**\r\n     * babel 6 option.\r\n     * \r\n     * @type {*}\r\n     * @memberOf ITemplTaskOption\r\n     */\r\n    babelOption: any;\r\n\r\n    /**\r\n     * ngAnnotate option.\r\n     * \r\n     * @type {*}\r\n     * @memberOf ITemplTaskOption\r\n     */\r\n    ngAnnotate: any;\r\n\r\n    /**\r\n     * sourceMaps path. default no source maps.\r\n     * \r\n     * @type {string | boolean}\r\n     * @memberOf ITemplTaskOption\r\n     */\r\n    sourceMaps: string | boolean;\r\n}\r\n\r\n\r\n@task({\r\n    oper: Operation.default | Operation.autoWatch\r\n})\r\nexport class NgTemplateCompile extends PipeTask {\r\n    constructor(info: ITaskInfo) {\r\n        super(info)\r\n    }\r\n\r\n    getInfo() {\r\n        this.info.name = this.info.name || 'ngTemlCompile';\r\n        return this.info;\r\n    }\r\n\r\n\r\n    pipes(ctx: ITaskContext, dist: IAssertDist, gulp?: Gulp): Pipe[] {\r\n        let option = ctx.option as ITemplTaskOption;\r\n        let pipes: Pipe[] = [\r\n            () => cache('templ'),\r\n            () => plumber(),\r\n            () => htmlMin({\r\n                empty: true,\r\n                spare: true,\r\n                quotes: true\r\n            }),\r\n            (ctx) => ngHtml2Js({\r\n                template: (<ITemplTaskOption>ctx.option).template || (<ITemplTaskOption>ctx.option).ngVersion === 2 ?\r\n                    `\r\nimport angular from 'angular';\r\nexport default angular.module('<%= moduleName %>', []).run(['$templateCache', function($templateCache) {\r\n    $templateCache.put('<%= template.url %>',  '<%= template.prettyEscapedContent %>');\r\n}]);\r\n`\r\n                    : `\r\nimport angular from 'angular';\r\nexport default angular.module('<%= moduleName %>', []).run(['$templateCache', function($templateCache) {\r\n    $templateCache.put('<%= template.url %>',  '<%= template.prettyEscapedContent %>');\r\n}]);\r\n`\r\n            }),\r\n            (ctx) => babel((<ITemplTaskOption>ctx.option).babelOption || { presets: ['es2015'] }),\r\n            (ctx) => ngAnnotate((<ITemplTaskOption>ctx.option).ngAnnotate || { sourceMap: true, gulpWarnings: false })\r\n        ];\r\n\r\n        if (option.sourceMaps === true) {\r\n            pipes.push(() => sourcemaps.init())\r\n        }\r\n\r\n        pipes = pipes.concat(super.pipes(ctx, dist, gulp));\r\n\r\n        if (option.uglify) {\r\n            pipes.push((ctx) => _.isBoolean(option.uglify) ? uglify() : uglify(option.uglify))\r\n\r\n        }\r\n\r\n\r\n        if (option.sourceMaps === true) {\r\n            let mappath = (_.isBoolean(option.sourceMaps) || !option.sourceMaps) ? './sourcemaps' : option.sourceMaps;\r\n            pipes.push((ctx) => sourcemaps.write(mappath));\r\n        }\r\n        return pipes;\r\n    }\r\n\r\n}\r\n\r\n"]}